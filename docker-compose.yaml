version: '3.8'
services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - APP_JWT_SECRET=my_secret
      - APP_KAFKA_BROKERS=kafka:9092
      - APP_API_EVENT_TOPIC=companies.events.v1
      - APP_DB_CONN=postgres://user:password@db:5432/companies?sslmode=disable
    depends_on:
      - db
      - db_migrations
      - kafka

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: companies
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d companies"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  db_migrations:
    image: migrate/migrate:latest
    entrypoint: ["sh", "-c", "migrate -path /migrations -database $${DB_URL} up"]
    environment:
      - DB_URL=postgres://user:password@db:5432/companies?sslmode=disable
    volumes:
      - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
